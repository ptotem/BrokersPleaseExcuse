<script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAgrj58PbXr2YriiRDqbnL1RSqrCjdkglBijPNIIYrqkVvD1R4QxRl47Yh2D_0C1l5KXQJGrbkSDvXFA" type="text/javascript"></script>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places&sensor=false"></script>
<script type="text/javascript">

    function stopRKey(evt) {
        var evt = (evt) ? evt : ((event) ? event : null);
        var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
        if ((evt.keyCode == 13) && (node.type == "text")) {
            return false;
        }
    }

    document.onkeypress = stopRKey;

    var map;
    <% unless @building.latitude.blank? %>
    var myLatlng = new google.maps.LatLng(<%= @building.latitude %>, <%= @building.longitude %>);
    <% else %>
    var myLatlng = new google.maps.LatLng(18.9647, 72.8258);
    <% end %>
    function initialize() {

        var myOptions = {
            zoom:17,
            center:myLatlng,
            mapTypeId:google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById('map'),
                myOptions);

        //this is the code for marker
        var marker = new google.maps.Marker({
            draggable:true,
            position:myLatlng,
            map:map,
            title:"This is where you are"
        });
        marker.setIcon("/assets/marker.png");

    <% @pois.each do |poi| %>
        var latlng_<%= poi.id %> = new google.maps.LatLng(<%= poi.latitude %>, <%= poi.longitude %>);
        var marker_<%= poi.id %> = new google.maps.Marker({
            draggable:false,
            position:latlng_<%= poi.id %>,
            map:map,
            title:"<%= poi.name %>"
        });

        marker_<%= poi.id %>.setIcon("<%= poi.poi_type.avatar.url %>");
    <% end %>

        //this is the code for search in the map
        geocoder = new google.maps.Geocoder();

        //this is the code for autocomplete
        var input = document.getElementById('address');
        var autocomplete = new google.maps.places.Autocomplete(input);

        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow();

        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            infowindow.close();
            var place = autocomplete.getPlace();
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }

            marker.setPosition(place.geometry.location);

            var address = '';
            if (place.address_components) {
                address = [(place.address_components[0] &&
                        place.address_components[0].short_name || ''),
                    (place.address_components[1] &&
                            place.address_components[1].short_name || ''),
                    (place.address_components[2] &&
                            place.address_components[2].short_name || '')
                ].join(' ');
            }

            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
//            infowindow.open(map, marker);
        });


        //this code enables user to click on the market and zoom the map

        google.maps.event.addDomListener(marker, 'click', function () {
            map.setZoom(map.getZoom() * 2);
            map.setCenter(marker.getPosition());
        });

        //this is the code to allow user to click anywhere on the map and it returns latitude and logitude and moves the marker there

        //we first add the event listener
        google.maps.event.addListener(map, 'click', function (event) {
            placeMarker(event.latLng);
        });

        google.maps.event.addListener(marker, 'drag', function (event) {
            placeMarker(event.latLng);
        });

        function placeMarker(location) {
            if (marker) { //on vérifie si le marqueur existe
                marker.setPosition(location); //on change sa position
            } else {
                marker = new google.maps.Marker({ //on créé le marqueur
                    position:location,
                    map:map
                });
            }

            document.getElementById('building_address_latitude').value = location.lat();
            document.getElementById('building_address_longitude').value = location.lng();
            document.getElementById('lat_hidden_field').value = location.lat();
            document.getElementById('lon_hidden_field').value = location.lng();
            getAddress(location);
        }

        function getAddress(latLng) {
            geocoder.geocode({'latLng':latLng},
                    function (results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {
                            if (results[0]) {
                                document.getElementById("address").value = results[0].formatted_address;
                            }
                            else {
                                document.getElementById("address").value = "No results";
                            }
                        }
                        else {

                            if (status == google.maps.GeocoderStatus.OVER_QUERY_LIMIT) {

                            }
                            else {
                                document.getElementById("address").value = status;
                            }
                        }
                    });
        }


    }
    //end of initialize

    //this is the function which searches the map
    function codeAddress() {
        var address = document.getElementById("address").value;
        geocoder.geocode({ 'address':address}, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
                var marker = new google.maps.Marker({
                    map:map,
                    position:results[0].geometry.location
                });
            } else {
                alert("Geocode was not successful for the following reason: " + status);
            }
        });
    }

    function handleNoGeolocation(errorFlag) {
        if (errorFlag) {
            var content = 'Error: The Geolocation service failed.';
        } else {
            var content = 'Error: Your browser doesn\'t support geolocation.';
        }

        var options = {
            map:map,
            position:new google.maps.LatLng(60, 105),
            content:content
        };

        var infowindow = new google.maps.InfoWindow(options);
        map.setCenter(options.position);
    }


    google.maps.event.addDomListener(window, 'load', initialize);


</script>

<h2>Location</h2>

<%= nested_form_for @building do |b| %>

    <%= hidden_field_tag :came_from, "location" %>
    <%= hidden_field_tag :flat_id, @flat.id %>

    <%= render :partial => 'form_menu' %>
    <br>

    <div class="content detail-panel" id="basic-panel">

      <div class="row-fluid">
        <div class="span4">

          <h2>Location</h2>

          <div class="row-fluid">
            <%= b.label :road, :class => "blabel" %>
            <%= b.text_field :road, :value => @building.road %>
          </div>

          <div class="row-fluid">
            <%= b.label :landmark, :class => "blabel" %>
            <%= b.text_field :landmark, :value => @building.landmark %>
          </div>

          <div class="row-fluid">
            <%= b.label "Also considered in", :class => "blabel" %>
            <%= hidden_field_tag 'building[locality_ids][]', nil %>
            <%= select_tag 'building[locality_ids][]', options_from_collection_for_select(@localities, 'id', 'name', @building.locality_ids), :multiple => true, :class => 'chzn-container-multi' %>
          </div>

          <div class="row-fluid">
            <%= b.label :pincode, :class => "blabel" %>
            <%= b.text_field :pincode, :value => @building.pincode %>
          </div>

          <div class="row-fluid">
            <%= b.label :latitude, :class => "blabel" %>
            <%= b.number_field :latitude, :value => @building.latitude||=10, :id => "building_address_latitude", :disabled => true %>
            <%= b.hidden_field :latitude, :value => @building.latitude||=10, :id => "lat_hidden_field" %>
            <br>
            <%= b.label :longitude, :class => "blabel" %>
            <%= b.number_field :longitude, :value => @building.longitude||=10, :id => "building_address_longitude", :disabled => true %>
            <%= b.hidden_field :longitude, :value => @building.longitude||=10, :id => "lon_hidden_field" %>
            <br>
            <br>
          </div>


          <div class="row-fluid">
            <h2>Directions</h2>
            <%= b.fields_for :building_routes do |builder| %>
                <%= builder.text_area :name, :rows => 1, :class => 'span4' %>
                <br>
                <%= builder.link_to_remove "Remove" %> <br/>
            <% end %>
            <%= b.link_to_add 'Add Route', :building_routes %> <br/>
          </div>


          <br>
          <br>

          <div>
            <%= b.hidden_field :id, :value => @building.id %>
            <%= b.submit "Save and Continue", :class => "submitter btn btn-primary btn-large", :id => "submit-basic" %>
          </div>

        </div>

        <div class="span8">
          <!--TODO Search should have value input when revisited-->
          <%= text_field_tag :search, "", :id => "address", :style => "margin-left:20px;" %>
          <%= link_to "Search", "#", :id => "update-map", :onclick => "codeAddress();", :class => "btn btn-inverse", :style => "margin-top:-10px;" %>
          <br>

          <div id="map" style="height: 360px;width:600px;" class="span8"></div>
          <br>
          <br>
        </div>
      </div>

    </div>
    <br>


<% end %>
