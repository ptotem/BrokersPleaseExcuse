<%= javascript_include_tag "exclusions/dhtmlxcommon" %>
<%= javascript_include_tag "exclusions/dhtmlxgrid" %>
<%= javascript_include_tag "exclusions/dhtmlxgrid_filter" %>
<%= javascript_include_tag "exclusions/dhtmlxgrid_srnd" %>
<%= javascript_include_tag "exclusions/dhtmlxgrid_start" %>
<%= javascript_include_tag "exclusions/dhtmlxgridcell" %>


<h1>Listing flats</h1>

<table id="dhtmlxtable">
  <tr>
    <td>Flat-Id</td>
    <td>Flat Name</td>
    <td>Building Name</td>
    <td>Locality</td>
    <td>Area</td>
    <td>BHK Config</td>
    <td>Furn Status</td>
    <td>Rent</td>
    <td>Related People</td>
    <td>Flat Status</td>
    <td>Available from</td>
    <td>Floor</td>
    <td>Batdroom</td>
    <td>Parking Slots</td>
    <td>Facilities</td>
    <td>Features</td>
    <td>Utilities</td>
    <td>Restrictions</td>
    <td>Flat Quality</td>
    <td>Approach Quality</td>
    <td>Building Quality</td>

  </tr>


  <% @flats.each do |flat| %>
      <tr>
        <td id=<%= flat.id+0 %>><%= flat.flat_key %></td>
        <td <%= flat.id+1 %>><%= flat.name %></td>
        <td <%= flat.id+2 %>><%= flat.building.name %></td>
        <td <%= flat.id+3 %>><%= flat.building.localities.join(",") %></td>
        <td <%= flat.id+4 %>><%= flat.area %></td>
        <td <%= flat.id+5 %>><%= flat.bhk_config.name %></td>
        <td <%= flat.id+6 %>><%= flat.furnstat.name %></td>
        <td <%= flat.id+7 %>><%= flat.expected_rents.map{|k|k.expected_rent}.join(",") %></td>
        <td <%= flat.id+8 %>><%= flat.contacts.join(",") %></td>
        <%#= #TODO: use flat status  %>
        <td <%= flat.id+9 %>><%= flat.bhk_config.name %></td>
        <!--flat status-->
        <td <%= flat.id+10 %>><%= flat.bhk_config.name %></td>
        <td <%= flat.id+11 %>><%= flat.floor %></td>
        <td <%= flat.id+12 %>><%= flat.bathrooms.count %></td>
        <td <%= flat.id+13 %>><%= flat.parkings.count %></td>
        <td <%= flat.id+14 %>><%= flat.facilities.join(",") %></td>
        <td <%= flat.id+15 %>><%#= @features.map{|k,v| v}.join(",") %>ff</td>
        <%#= TODO:add utilities in the listings %>
        <td <%= flat.id+16 %>><%#= flat.utilities.join(",") %>gggg</td>
        <td <%= flat.id+17 %>><%= flat.restrictions.join(",") %></td>
        <!--flat quality-->
        <td <%= flat.id+18 %>><%= flat.bhk_config.name %></td>
        <!--flat quality-->

        <td <%= flat.id+19 %>><%= flat.building.approach_qualities.join(",") %></td>
        <td <%= flat.id+20 %>><%= flat.building.building_qualities.join(",") %></td>




      </tr>
  <% end %>

</table>

<%= link_to 'New Flat', new_flat_path %>

<script type="text/javascript">


    var mygrid;
    function doInitGrid() {
        mygrid = new dhtmlXGridFromTable("dhtmlxtable");

        mygrid.setSkin("light");
        mygrid.attachHeader("#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#select_filter,#text_filter,#numeric_filter,#text_filter,#select_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter");
        mygrid.enableAutoWidth(true);
        mygrid.enableAutoHeight(true);
        mygrid.setSizes();


        //mygrid.init();
        //mygrid.loadXML("/assets/sample_data.xml");
        mygrid.attachEvent("onFilterStart", function (ind, ind2) {


            if (ind2.toString().length==20)
            {
                var rowsAll = mygrid.getAllRowIds(","); // delimiter to use in the list should be specified
                for (i = 0; i < rowsAll.split(",").length; i++) {
                    // alert(rowsAll.split(",")[i]);

                    mygrid.setRowHidden(rowsAll.split(",")[i], false);
                }
            }
            else
            {


                var cell = new Array();
                var s=new Array();

                // alert(ind2.toString().indexOf(","));
                if (ind2.toString().indexOf(",") != -1)
                    s = ind2.toString().split(",");
                else
                    s[0] = ind2.toString();

                //alert(s[1].length);
                for (var i = 0; i < s.length; i++) {

                    if (s[i].length>0)
                        cell[i] = mygrid.findCell(s[i], 0);
                }

                //alert(cell);
                var final_array = new Array();
                var x = 0;
                if (cell.length>1)
                {
                    for (i = 0; i < cell.length - 1; i++) {
                        for (var k = 0; k < cell[i].length; k++) {
                            for (var j = 0; j < cell[i + 1].length; j++) {
                                if (cell[i][k].toString() == cell[i + 1][j].toString()) {
                                    final_array[x] = cell[i][k];
                                    x++;
                                }
                            }
                        }
                    }
                }
                else
                    final_array=cell;

                var rowsAll = mygrid.getAllRowIds(","); // delimiter to use in the list should be specified
                for (i = 0; i < rowsAll.split(",").length; i++) {
                    // alert(rowsAll.split(",")[i]);
                    if (final_array.toString().indexOf(rowsAll.split(",")[i].toString()) == -1) {
                        mygrid.setRowHidden(rowsAll.split(",")[i], true);
                    }
                    else {
                        mygrid.setRowHidden(rowsAll.split(",")[i], false);
                    }
                }
            }

        });

    }


    $(function () {
        doInitGrid();


    });


</script>