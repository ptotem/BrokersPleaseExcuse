<%= javascript_include_tag "exclusions/dhtmlxcommon" %>
<%= javascript_include_tag "exclusions/dhtmlxgrid" %>
<%= javascript_include_tag "exclusions/dhtmlxgrid_filter" %>
<%= javascript_include_tag "exclusions/dhtmlxgrid_srnd" %>
<%= javascript_include_tag "exclusions/dhtmlxgrid_start" %>
<%= javascript_include_tag "exclusions/dhtmlxgridcell" %>




<div class="content" style="margin-top: 25px;">

  <div class="row">
    <h1 style="margin-left: 20px">
      Property Index
    </h1>
  </div>
</div>
<br>

<div class="content">
  <table id="dhtmlxtable">
    <tr>
      <td>Flat-Key</td>
      <td>Flat Name</td>
      <td>Building Name</td>
      <td>Locality</td>
      <td>Area</td>
      <td>BHK Config</td>
      <td>Furn Status</td>
      <td>Rent</td>
      <td>Related People</td>

      <td>Available from</td>
      <td>Floor</td>
      <td>Bathroom</td>
      <td>Parking Slots</td>
      <td>Flat Facilities</td>
      <td>Building Facilities</td>
      <td>Restrictions</td>
      <td>Flat Quality</td>


    </tr>


    <% @flats.each do |flat| %>

        <%

           @building_quality=Quality.find(flat.building.building_quality_id)
           @approach_quality=Quality.find(flat.building.approach_quality_id)
           @interiors_quality=Quality.find(flat.interiors_quality_id)
           @view_quality=Quality.find(flat.view_quality_id)

           @locality_quality=flat.building.main_locality.quality
           @overall_quality_value = ((@building_quality.value*2+@interiors_quality.value*2+@locality_quality.value*2+@approach_quality.value+@view_quality.value).to_f/8.0).round(0)
        %>



        <tr>
          <td id=<%= flat.id+0 %>><%= link_to flat.flat_key, "/building/#{flat.building.id}/flat/#{flat.id}/edit" %></td>
          <td <%= flat.id+1 %>><%= flat.name %></td>
          <td <%= flat.id+2 %>><%= flat.building.name %></td>
          <td <%= flat.id+3 %>><%= flat.building.primary_locality.name+","+flat.building.localities.map { |l| l.name }.join(",") %></td>
          <td <%= flat.id+4 %>><%= flat.area %></td>
          <td <%= flat.id+5 %>><%= flat.bhk_config.name.split(" ")[0] %></td>
          <td <%= flat.id+6 %>><%= flat.furnstat.name %></td>
          <td <%= flat.id+7 %>><%= flat.expected_rents.map { |k| k.name }.join(",") %></td>
          <td <%= flat.id+8 %>><%= flat.contacts.map { |c| c.name }.join(",") %></td>
          <td <%= flat.id+10 %>><%= flat.available_froms.map{|af|af.name.strftime(" %b %y")}.join(",") %></td>
          <td <%= flat.id+11 %>><%= flat.floor %></td>
          <td <%= flat.id+12 %>><%= flat.bathrooms.count %></td>
          <td <%= flat.id+13 %>><%= flat.parkings.count %></td>
          <td <%= flat.id+14 %>><%= flat.facilities.map {|f|f.name}.join(",") %></td>
          <td <%= flat.id+15 %>><%= flat.building.facilities.map {|f|f.name}.join(",") %></td>

          <td <%= flat.id+17 %>><%= flat.restrictions.map{|r| r.name}.join(",") %></td>
          <!--flat quality-->
          <td <%= flat.id+18 %>><%= @overall_quality_value %></td>
          <!--flat quality-->


        </tr>
    <% end %>

  </table>
</div>

<%= link_to 'New Flat', new_flat_path %>

<script type="text/javascript">


    var mygrid;
    function doInitGrid() {
        mygrid = new dhtmlXGridFromTable("dhtmlxtable");

        mygrid.setSkin("light");
        mygrid.attachHeader("#text_filter,#text_filter,#text_filter,#text_filter,#numeric_filter,#numeric_filter,#select_filter,#numeric_filter,#text_filter,#select_filter,#numeric_filter,#numeric_filter,#numeric_filter,#text_filter,#text_filter,#text_filter,#numeric_filter");
        mygrid.enableAutoWidth(true);
        mygrid.enableAutoHeight(true);
        mygrid.setSizes();


        //mygrid.init();
        //mygrid.loadXML("/assets/sample_data.xml");
        /*mygrid.attachEvent("onFilterStart", function (ind, ind2) {


            if (ind2.toString().length == 20) {

                var rowsAll = mygrid.getAllRowIds(","); // delimiter to use in the list should be specified
                for (i = 0; i < rowsAll.split(",").length; i++) {
                    // alert(rowsAll.split(",")[i]);

                    mygrid.setRowHidden(rowsAll.split(",")[i], false);
                }
            }
            else {


                var cell = new Array();
                var s = new Array();


                if (ind2.toString().indexOf(",") != -1)
                    s = ind2.toString().split(",");
                else
                    s[0] = ind2.toString();


                var tmp = new Array();
                for (var i = 0; i < s.length; i++) {

                    //cell[i] = new Array();
                    if (s[i].length > 0) {
                        //   alert(i);
                        tmp = mygrid.findCell(s[i]).toString().split(",");
                        for (var a = 0; a < tmp.length; a++) {
                            if (a % 2 == 0)
                                cell.push(tmp[a])
                        }

                    }


                }


//                var final_array = new Array();
//                var x = 0;
//                if (cell.length > 1) {
//                    for (i = 0; i < cell.length - 1; i++) {
//                       if (cell[i].length > 0) {
//                            for (var k = 0; k < cell[i].length; k++) {
//                             //   if (cell[i + 1].length > 0) {
//                                 //   for (var j = 0; j < cell[i + 1].length; j++) {
//                                   //     if (cell[i][k].toString() == cell[i + 1][j].toString()) {
//                                            final_array[x] = cell[i][k];
//                                            x++;
//                                     //   }
//                                  //  }
//                           //     }
////                                else {
////                                    final_array[x] = cell[i][k];
////                                    x++;
////                                }
//                            }
//                        }
//                    }
//                }
//                else
//                final_array = cell;


                rowsAll = mygrid.getAllRowIds(","); // delimiter to use in the list should be specified
//                alert(rowsAll);
//                alert(final_array.toString());
//                for (i = 0; i < rowsAll.split(",").length; i++) {
//                    // alert(rowsAll.split(",")[i]);
//                    if (final_array.toString().indexOf(rowsAll.split(",")[i].toString()) == -1) {
//                        mygrid.setRowHidden(rowsAll.split(",")[i], true);
//                    }
//                    else {
//                        mygrid.setRowHidden(rowsAll.split(",")[i], false);
//                    }
//                }

                for (i = 0; i < rowsAll.split(",").length; i++) {
                    // alert(rowsAll.split(",")[i]);

                    mygrid.setRowHidden(rowsAll.split(",")[i], true);
                }

                for (i = 0; i < cell.length; i++) {
                    // alert(cell[i]);
                    mygrid.setRowHidden(cell[i], false);
                }

            }

        });*/

    }


    $(function () {
        doInitGrid();


    });


</script>