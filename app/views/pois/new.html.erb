<script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAgrj58PbXr2YriiRDqbnL1RSqrCjdkglBijPNIIYrqkVvD1R4QxRl47Yh2D_0C1l5KXQJGrbkSDvXFA" type="text/javascript"></script>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places&sensor=false"></script>
<script type="text/javascript">

    function stopRKey(evt) {
        var evt = (evt) ? evt : ((event) ? event : null);
        var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
        if ((evt.keyCode == 13) && (node.type == "text")) {
            return false;
        }
    }

    document.onkeypress = stopRKey;

    var map;

    <%  unless Poi.count.zero? %>
    var myLatlng = new google.maps.LatLng(<%= Poi.last.latitude %>, <%= Poi.last.longitude %>);
    <% else %>
    var myLatlng = new google.maps.LatLng(18.9647, 72.8258);
    <% end %>

    function initialize() {

        var myOptions = {
            zoom:17,
            center:myLatlng,
            mapTypeId:google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById('map'),
                myOptions);

        //this is the code for marker
        var marker = new google.maps.Marker({
            draggable:true,
            position:myLatlng,
            map:map,
            title:"This is where you are"
        });
        marker.setIcon("/assets/marker.png");

    <% @pois.each do |poi| %>
        var latlng_<%= poi.id %> = new google.maps.LatLng(<%= poi.latitude %>, <%= poi.longitude %>);
        var marker_<%= poi.id %> = new google.maps.Marker({
            draggable:true,
            position:latlng_<%= poi.id %>,
            map:map,
            title:"<%= poi.name %>"
        });

        marker_<%= poi.id %>.setIcon("<%= poi.poi_type.avatar.url %>");
    <% end %>

        //this is the code for search in the map
        geocoder = new google.maps.Geocoder();

        //this is the code for autocomplete
        var input = document.getElementById('address');
        var autocomplete = new google.maps.places.Autocomplete(input);

        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow();

        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            infowindow.close();
            var place = autocomplete.getPlace();
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }

            marker.setPosition(place.geometry.location);

            var address = '';
            if (place.address_components) {
                address = [(place.address_components[0] &&
                        place.address_components[0].short_name || ''),
                    (place.address_components[1] &&
                            place.address_components[1].short_name || ''),
                    (place.address_components[2] &&
                            place.address_components[2].short_name || '')
                ].join(' ');
            }

            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
//            infowindow.open(map, marker);
        });


        //this code enables user to click on the market and zoom the map

        google.maps.event.addDomListener(marker, 'click', function () {
            map.setZoom(map.getZoom() * 2);
            map.setCenter(marker.getPosition());
        });

        //this is the code to allow user to click anywhere on the map and it returns latitude and logitude and moves the marker there

        //we first add the event listener
        google.maps.event.addListener(map, 'click', function (event) {
            placeMarker(event.latLng);
        });

        google.maps.event.addListener(marker, 'drag', function (event) {
            placeMarker(event.latLng);
        });

        function placeMarker(location) {
            if (marker) { //on vérifie si le marqueur existe
                marker.setPosition(location); //on change sa position
            } else {
                marker = new google.maps.Marker({ //on créé le marqueur
                    position:location,
                    map:map
                });
            }

            document.getElementById('poi_address_latitude').value = location.lat();
            document.getElementById('poi_address_longitude').value = location.lng();
            document.getElementById('lat_hidden_field').value = location.lat();
            document.getElementById('lon_hidden_field').value = location.lng();
            getAddress(location);
        }

        function getAddress(latLng) {
            geocoder.geocode({'latLng':latLng},
                    function (results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {
                            if (results[0]) {
                                document.getElementById("address").value = results[0].formatted_address;
                            }
                            else {
                                document.getElementById("address").value = "No results";
                            }
                        }
                        else {

                            if (status == google.maps.GeocoderStatus.OVER_QUERY_LIMIT) {

                            }
                            else {
                                document.getElementById("address").value = status;
                            }
                        }
                    });
        }


    }
    //end of initialize

    //this is the function which searches the map
    function codeAddress() {
        var address = document.getElementById("address").value;
        geocoder.geocode({ 'address':address}, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
                var marker = new google.maps.Marker({
                    map:map,
                    position:results[0].geometry.location
                });
            } else {
                alert("Geocode was not successful for the following reason: " + status);
            }
        });
    }

    function handleNoGeolocation(errorFlag) {
        if (errorFlag) {
            var content = 'Error: The Geolocation service failed.';
        } else {
            var content = 'Error: Your browser doesn\'t support geolocation.';
        }

        var options = {
            map:map,
            position:new google.maps.LatLng(60, 105),
            content:content
        };

        var infowindow = new google.maps.InfoWindow(options);
        map.setCenter(options.position);
    }

    google.maps.event.addDomListener(window, 'load', initialize);

    $(function () {
        $("#poi_poi_type_id").change(function () {
            if ($(this).val() == "<%= PoiType.find_by_name("Building").id %>") {
                $('#poi_note').show();
            }
            else {
                $('#poi_note').hide();
            }
        });
    });

</script>


<!--This is the script for dhtmlx..-->
<%= content_for :head do %>
    <%= javascript_include_tag "exclusions/dhtmlxcommon" %>
    <%= javascript_include_tag "exclusions/dhtmlxgrid" %>
    <%= javascript_include_tag "exclusions/dhtmlxgrid_filter" %>
    <%= javascript_include_tag "exclusions/dhtmlxgrid_srnd" %>
    <%= javascript_include_tag "exclusions/dhtmlxgrid_start" %>
    <%= javascript_include_tag "exclusions/dhtmlxgridcell" %>

    <script type="text/javascript">
        function clickmodal_link(data, element, task_id) {

            $("#new_interaction_form").children(".modal-body").html("");

            $.get("/interactions/new?task_id=" + task_id + "&prev_comment=" + data, function (data) {
                $($(element).attr("href")).children(".modal-body").html(data);
            });

        }

        var mygrid;
        function doInitGrid() {
            mygrid = new dhtmlXGridFromTable("dhtmlx_interactions_table");

            mygrid.setSkin("bpe");
            mygrid.attachHeader("#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter");
            mygrid.enableAutoWidth(true);
            mygrid.enableAutoHeight(true);
            mygrid.setSizes();




            //hiding columns
            //  mygrid.setColumnHidden(0,true);
        }

        $(function () {
            doInitGrid();




        });

    </script>
    <% end %>

<h2>Point of Interest</h2>

<%= nested_form_for @poi do |b| %>

    <div class="content detail-panel" id="basic-panel">

      <div class="row-fluid">
        <div class="span12">
          <!--TODO Search should have value input when revisited-->

          <div class="row-fluid">
            <div class="span2"><h1>Points of Interest</h1></div>
            <div class="span10">
              <table >
                <tr>
                  <td colspan="4">
                    <%= text_field_tag :search, "", :id => "address", :class => "span7" %>
                    <%= link_to "Search", "#", :id => "update-map", :onclick => "codeAddress();", :class => "btn btn-inverse", :style => "margin-top:-10px;" %>
                  </td>
                </tr>
                <tr>
                  <td><%= b.label :latitude %> </td>
                  <td><%= b.number_field :latitude, :value => @poi.latitude||=10, :id => "poi_address_latitude", :disabled => true %> </td>
                  <td><%= b.label :longitude %> </td>
                  <td style="text-align: right"><%= b.number_field :longitude, :value => @poi.longitude||=10, :id => "poi_address_longitude", :disabled => true %> </td>
                </tr>
              </table>
            </div>
            <%= b.hidden_field :longitude, :value => @poi.longitude||=10, :id => "lon_hidden_field" %>
            <%= b.hidden_field :latitude, :value => @poi.latitude||=10, :id => "lat_hidden_field" %>

            <br>
          </div>

          <div id="map" style="height: 360px;width:840px;"></div>
          <br>
        </div>
      </div>


      <div class="row-fluid">
        <div class="span12">
          <div class="span3">
            <%= b.label "Type" %>
            <%= b.select :poi_type_id, options_from_collection_for_select(@poi_type_ids, "id", "name", @poi.poi_type_id), :id => "poi-type" %>
            <br/>
          </div>

          <div class="span3">
            <%= b.label "Name" %>
            <br>
            <%= b.text_field :name %>
          </div>
          <div class="span3">
            <%= b.label "Locality" %>
            <%= b.select :locality_id, options_from_collection_for_select(@localities, "id", "name", @poi.locality_id) %>
            <br/>
          </div>
          <div class="span3">
            <%= b.submit "Save", :class => "submitter btn btn-primary btn-large", :id => "submit-basic" %>
          </div>
          <br>
          <br>
        </div>
        <br>

        <div class="row-fluid" id="poi_note">
          <div class="span12">
            <div class="span8">
              <%= b.label "Building Note", :class => "blabel" %>
              <%= b.text_area :note, :rows => 1, :class => "span10" %>
              <br/>
            </div>
          </div>
        </div>
        <hr>
        <br>
        <% unless Poi.all.blank? %>
            <!--TODO Add dhtmlx here-->
            <div class="row-fluid" style="margin-top:20px;">
              <h1>Existing Points of Interest</h1>
              <table class="table table-condensed" style="width:840px;" id="dhtmlx_interactions_table">
                <tr>
                  <th>Name</th>
                  <th>Type</th>
                  <th>Locality</th>
                  <th>Note</th>
                </tr>
                <% @pois.each do |poi| %>
                    <tr>
                      <td><%= poi.name %></td>
                      <td><%= poi.poi_type.name %></td>
                      <td><%= poi.locality.name %>, <%= poi.locality.area.name %> </td>
                      <td><%= poi.note[0..60] unless poi.note.blank?%></td>
                    </tr>
                <% end %>
              </table>
            </div>
        <% end %>

      </div>

    </div>
    <br>


<% end %>
